@using RecoverUnsoldAdmin.Services
@using RecoverUnsoldAdmin.Extensions
@inherits LayoutComponentBase
@inject ThemeService ThemeService

<MudThemeProvider Theme="ThemeService.Theme()"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <CascadingAuthenticationState>
        <AuthorizeView>
            <Authorized>
                <MudAppBar>
                    <MudIconButton Icon="@_menuIcon" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(_ => DrawerToggle())"/>
                    @StringLocalizer["Dashboard"]
                    <MudSpacer/>
                    <div style="display: flex;align-items: center">
                        <MudToggleIconButton Toggled="ThemeService.IsDarkMode" ToggledChanged="ThemeService.ToggleDarkMode"
                                             Color="@Color.Primary" ToggledColor="@Color.Primary"
                                             ToggledIcon="@Icons.Filled.LightMode" ToggledTitle="@(StringLocalizer["LightTheme"])"
                                             Icon="@Icons.Filled.DarkMode" Title="@(StringLocalizer["DarkTheme"])"/>
                        <CultureSwitcher/>

                        <MudButton OnClick="AccountPopoverToggle">
                            <MudAvatar Size="Size.Medium" Style="margin-right: 0.5rem">
                                @context.User.Name()[0].ToString()
                            </MudAvatar>
                        </MudButton>
                        <MudPopover Open="_accountPopoverOpen" AnchorOrigin="Origin.BottomCenter"
                                    TransformOrigin="Origin.TopRight">
                            <div class="d-flex flex-column" style="align-items: start;">
                                <MudButton StartIcon="@Icons.Material.Filled.Settings" OnClick="OpenSettings" Style="width: 100%;">
                                    @StringLocalizer["Settings"]
                                </MudButton>
                                <MudButton StartIcon="@Icons.Material.Filled.Logout" OnClick="Logout" Style="width: 100%;">
                                    @StringLocalizer["Logout"]
                                </MudButton>
                            </div>
                        </MudPopover>

                        @context.User.Identity.Name
                    </div>
                </MudAppBar>
                <MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Mini">
                    <NavMenu/>
                </MudDrawer>
                <MudMainContent>
                    @Body
                </MudMainContent>

                <MudScrollToTop>
                    <MudFab Color="Color.Primary" Icon="@Icons.Filled.KeyboardArrowUp"/>
                </MudScrollToTop>
            </Authorized>

            <NotAuthorized>
                <LoginRedirect/>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</MudLayout>

@code {

    [Inject]
    private IStringLocalizer<App> StringLocalizer { get; set; } = default!;

    [Inject]
    private ISnackbar Snackbar { get; set; } = default!;

    [Inject]
    private AppAuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;
    
    bool _drawerOpen;
    bool _accountPopoverOpen;
    string _menuIcon = Icons.Filled.Menu;

    void DrawerToggle() {
        _drawerOpen = !_drawerOpen;
        _menuIcon = _drawerOpen ? Icons.Filled.MenuOpen : Icons.Filled.Menu;
    }

    void AccountPopoverToggle() {
        _accountPopoverOpen = !_accountPopoverOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        await ThemeService.LoadTheme();
        StateHasChanged();
    }

    void OpenSettings() {
        _accountPopoverOpen = false;
        NavigationManager.NavigateTo("/Settings");
    }

    async Task Logout() {
        await AuthenticationStateProvider.Logout();
        NavigationManager.NavigateTo("/Login");
        Snackbar.Clear();
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
        Snackbar.Add(@StringLocalizer["LogoutSuccessful"], Severity.Success);
    }

}