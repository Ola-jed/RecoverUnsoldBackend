name: Deploy Recover Unsold worker

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Dotnet restore
        run: dotnet restore

      - name: Dotnet build
        run: dotnet build --no-restore

      - name: Dotnet run tests
        run: dotnet test --no-build --verbosity normal

      - name: Dotnet publish       
        run: dotnet publish RecoverUnsoldWorker/RecoverUnsoldWorker.csproj -c Release --output ./WorkerRelease

      - name: Fetch secrets and update appsettings.json
        run: |
          echo "$JSON" > ./WorkerRelease/appsettings.temp.json
          jq -s '.[0] * .[1]' ./WorkerRelease/appsettings.json ./WorkerRelease/appsettings.temp.json > ./WorkerRelease/appsettings.updated.json
          mv ./WorkerRelease/appsettings.updated.json ./WorkerRelease/appsettings.json
        env:
          JSON: ${{ secrets.JSON_SECRET }}
        shell: bash

      - name: Stop worker Service
        uses: garygrossgarten/github-action-ssh@v0.6.3
        with:
          command: service ${{ secrets.SERVICE_NAME_WORKER }} stop
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}

      - name: Copy to Server via SCP
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./WorkerRelease
          concurrency: 10
          remote: ${{ secrets.REMOTE_TARGET_WORKER }}
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
        env:
          ASPNETCORE_ENVIRONMENT: Production

      - name: Start Recover Unsold worker service
        uses: garygrossgarten/github-action-ssh@v0.6.3
        with:
          command: service ${{ secrets.SERVICE_NAME_WORKER }} start
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
